---
# tasks file for cifs-mounts


- name: Install cifs util packages
  apt:
      name: "{{ cifs_packages }}"
      state: present
  become: yes
  tags: [install]

- name: Ensure directory for credential file exists
  file:
    path: "{{ item.credentials.path | dirname }}" 
    state: directory 
    owner: "{{ item.credentials.owner | default(omit) }}"
  become: yes
  when: item.credentials is defined and item.credentials.path is defined
  loop: "{{ cifs_mounts }}"
  tags: [config, dir]

- name: Create credential file
  copy:
      dest: "{{ item.credentials.path }}" 
      content: |
        username={{ item.credentials.username }}
        password={{ item.credentials.password }}
        {% if item.credentials.domain is defined %}
        domain={{ item.credentials.domain|upper }}
        {% endif %}
      owner: "{{ item.credentials.owner | default(omit) }}"
      mode: "{{ item.credentials.mode | default('0600', true)}} "
  become: yes
  when: item.credentials is defined and item.credentials.username is defined and item.credentials.password is defined and item.credentials.path is defined and item.credentials.src is not defined
  loop: "{{ cifs_mounts }}"
  tags: [config]


- name: Transfer credential file to host
  copy:
      dest: "{{ item.credentials.path }}"
      src: "{{ item.credentials.src }}"
      owner: "{{ item.credentials.owner | default(omit) }}"
      mode: "{{ item.credentials.mode | default('0600', true)}} "
  become: yes
  when: item.credentials is defined and item.credentials.src is defined and item.credentials.path is defined
  loop: "{{ cifs_mounts }}"
  tags: [config]
    

- name: Configure mounts on system
  mount:
    fstype: cifs
    name: "{{ item.path }}"
    src: "{{ item.cifs_path }}"
    opts: "{{ (['credentials='+item.credentials.path] + (item.opts|default([], true)) if item.credentials is defined and item.credentials.path else item.opts|default([], true)) | join(',') }}"
    dump: "{{ item.dump | default(omit) }}"
    passno: "{{ item.passno | default(omit) }}"
    state: "{{ item.state | default(cifs_default_state, true)}}"
  become: yes
  loop: "{{ cifs_mounts }}"
  tags: [config]
